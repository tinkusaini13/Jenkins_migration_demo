pipeline {
    agent any

    environment {
        TOMCAT_HOME = '/opt/tomcat'  
        WAR_FILE = 'cloud.war'  
        //SONAR_PROJECT_KEY = 'mvn-jenkins-project'
        //SONAR_PROJECT_NAME = 'mvn-jenkins-project'
       // SONAR_URL = 'http://18.60.158.12:9000'
       // SONAR_TOKEN = 'sqp_93b2d90e6db6dab1c7f7f1829d50e771a3fc5c2b'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                git branch: 'main', url: 'https://github.com/tinkusaini13/Jenkins_migration_demo.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'mvn clean package'
                    archiveArtifacts 'target/*.war'
                }
            }
        }

     /*  stage('Sonarqube analysis - SAST') {
            steps {
                script {
                    withSonarQubeEnv('SonarQube') {
                        sh "mvn clean verify sonar:sonar \
                            -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                            -Dsonar.projectName=${SONAR_PROJECT_NAME} \
                            -Dsonar.host.url=${SONAR_URL} \
                            -Dsonar.login=${SONAR_TOKEN}"
                    }
                }
            }
        } */

        stage('Deploy to Tomcat') {
            steps {
                script {
                   // sh "${TOMCAT_HOME}/bin/shutdown.sh"
                   // sh "cp target/${WAR_FILE} ${TOMCAT_HOME}/webapps/"
                   // sh "${TOMCAT_HOME}/bin/startup.sh"
                }
            }
        }

        stage('Verify Deployment') {
            steps {
                script {
                    sleep 30
                    sh "curl -I http://localhost"
                }
            }
        }

        stage('Clean Up') {
            steps {
                script {
                    deleteDir()
                }
            }
        }
    }

    post {
        success {
            echo 'Deployment successful!'
        }

        failure {
            echo 'Deployment failed!'
        }
    }
}
